name: Android CI (StarbuckNoteTaker)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 13114758
          packages: >-
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            ndk;26.1.10909125

      - name: Configure local.properties
        run: |
          SDK_PATH="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          if [ -z "$SDK_PATH" ]; then
            echo "Android SDK path not available" >&2
            exit 1
          fi
          echo "sdk.dir=$SDK_PATH" > local.properties

      - name: Download latest summarizer model assets
        env:
          RELEASE_BASE_URL: https://github.com/${{ github.repository }}/releases/latest/download
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          ASSETS_DIR="app/src/main/assets"
          mkdir -p "$ASSETS_DIR"

          download_asset() {
            local file="$1"
            local url="${RELEASE_BASE_URL}/${file}"
            local dest="${ASSETS_DIR}/${file}"

            echo "Fetching ${file} from ${url}" >&2

            if [ -n "${GH_TOKEN:-}" ]; then
              curl --fail --location --retry 3 --retry-all-errors \
                -H "Authorization: Bearer ${GH_TOKEN}" \
                -H "Accept: application/octet-stream" \
                "$url" \
                --output "$dest"
            else
              curl --fail --location --retry 3 --retry-all-errors \
                "$url" \
                --output "$dest"
            fi
          }

          download_asset "note_classifier.tflite"
          download_asset "category_mapping.json"
          download_asset "deployment_metadata.json"

      - name: Verify summarizer model assets
        run: |

          set -euo pipefail

          ASSETS_DIR="app/src/main/assets"
          mkdir -p "$ASSETS_DIR"

          REQUIRED_FILES=(
            "note_classifier.tflite"
            "category_mapping.json"
            "deployment_metadata.json"
          )

          missing=()
          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "${ASSETS_DIR}/${file}" ]; then
              missing+=("${file}")
            fi
          done

          if [ "${#missing[@]}" -eq 0 ]; then
            echo "All summarizer assets already present."
          else
            echo "::error::Missing summarizer assets: ${missing[*]}"
            exit 1
          fi

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Show Gradle version
        run: ./gradlew --version

      #- name: Decode keystore
      #  run: |
      #    mkdir -p app
      #    echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > app/starbucknotetaker.jks

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon
        env:
          ANDROID_KEYSTORE_PATH: app/starbucknotetaker.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Rename APK with build version
        run: |
          mkdir -p build-out
          VERSION_NAME="1.0.${GITHUB_RUN_NUMBER}"
          cp app/build/outputs/apk/debug/app-debug.apk \
            "build-out/StarbuckNoteTaker-${VERSION_NAME}.apk"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: StarbuckNoteTaker-1.0.${{ github.run_number }}
          path: build-out/StarbuckNoteTaker-1.0.${{ github.run_number }}.apk
          if-no-files-found: error
